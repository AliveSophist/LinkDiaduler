package com.linkdiaduler;

import javax.swing.JFrame;
import javax.swing.JLabel;

import java.awt.Choice;

import javax.swing.JCheckBox;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.JButton;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Window.Type;

import javax.swing.JPanel;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import javax.swing.JEditorPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.EditorKit;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;

public class Macro {

	public JFrame frameMacro;
	
	private JToggleButton tglbtnWeekMacro, tglbtnMonthMacro, tglbtnYearMacro;
	private JLabel lblStartDate, lblEndDate;
	private JCheckBox cbRepeateNum, cbDirectDate;
	private Choice choiceRepeateNum, choiceSDYear, choiceSDMonth, choiceSDDate, choiceEDYear, choiceEDMonth, choiceEDDate;

	private JEditorPane textArea;
	private JTextField tfLinkingText, tfLink;
	private JButton btnAddText, btnAddImage, btnAddTextMacro, btnAddLinkedText;
	private JPanel pnlMacroSetting;
	private JPanel pnlMacroText;
	
	private int[] startdate=new int[3];
	private int[] enddate=new int[3];
	private int repeatenum;
	private int repeatGap=0;
	
	public Macro() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frameMacro = new JFrame();
		frameMacro.setAlwaysOnTop(true);
		frameMacro.setType(Type.UTILITY);
		frameMacro.setTitle("Macro");
		frameMacro.setBounds(450, 200, 340, 290);
		frameMacro.getContentPane().setLayout(null);
		
		pnlMacroSetting = new JPanel();
		pnlMacroSetting.setBounds(0, 0, 332, 264);
		frameMacro.getContentPane().add(pnlMacroSetting);
		pnlMacroSetting.setLayout(null);
		
			tglbtnWeekMacro = new JToggleButton("주간");
			tglbtnWeekMacro.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					tglbtnMonthMacro.setSelected(false);
					tglbtnYearMacro.setSelected(false);
					repeatGap=0;
					
					if(cbDirectDate.isSelected()){
						choiceEDYear.setEnabled(true);
						choiceEDMonth.setEnabled(true);
						choiceEDDate.setEnabled(true);
					}
					else{
						choiceEDYear.setEnabled(false);
						choiceEDMonth.setEnabled(false);
						choiceEDDate.setEnabled(false);
					}
				}
			});
			tglbtnWeekMacro.setBounds(35, 12, 80, 23);
			pnlMacroSetting.add(tglbtnWeekMacro);
			
			tglbtnMonthMacro = new JToggleButton("월간");
			tglbtnMonthMacro.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					tglbtnWeekMacro.setSelected(false);
					tglbtnYearMacro.setSelected(false);
					repeatGap=1;
					
					if(cbDirectDate.isSelected()){
						choiceEDYear.setEnabled(true);
						choiceEDMonth.setEnabled(true);
						choiceEDDate.setEnabled(false);
					}
					else{
						choiceEDYear.setEnabled(false);
						choiceEDMonth.setEnabled(false);
						choiceEDDate.setEnabled(false);
					}
				}
			});
			tglbtnMonthMacro.setBounds(121, 12, 80, 23);
			pnlMacroSetting.add(tglbtnMonthMacro);
			
			tglbtnYearMacro = new JToggleButton("년간");
			tglbtnYearMacro.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					tglbtnWeekMacro.setSelected(false);
					tglbtnMonthMacro.setSelected(false);
					repeatGap=2;
					
					if(cbDirectDate.isSelected()){
						choiceEDYear.setEnabled(true);
						choiceEDMonth.setEnabled(false);
						choiceEDDate.setEnabled(false);
					}
					else{
						choiceEDYear.setEnabled(false);
						choiceEDMonth.setEnabled(false);
						choiceEDDate.setEnabled(false);
					}
				}
			});
			tglbtnYearMacro.setBounds(207, 12, 80, 23);
			pnlMacroSetting.add(tglbtnYearMacro);
			
			lblStartDate = new JLabel("Start Date");
			lblStartDate.setBounds(12, 60, 80, 15);
			pnlMacroSetting.add(lblStartDate);
			
			choiceSDYear = new Choice();
			for(int year=1990; year<=2089; year++)
				choiceSDYear.add(year+"");
			choiceSDYear.setBounds(12, 81, 55, 21);
			pnlMacroSetting.add(choiceSDYear);
			choiceSDYear.select(DateManager.toString(DateManager.getOriginal(), 4));
			
			choiceSDMonth = new Choice();
			for(int month=1; month<=12; month++)
				choiceSDMonth.add(month+"");
			choiceSDMonth.setBounds(73, 81, 40, 21);
			pnlMacroSetting.add(choiceSDMonth);
			choiceSDMonth.select(DateManager.toString(DateManager.getOriginal(), 1));
			
			choiceSDDate = new Choice();
			for(int date=1; date<=31; date++)
				choiceSDDate.add(date+"");
			choiceSDDate.setBounds(119, 81, 40, 21);
			pnlMacroSetting.add(choiceSDDate);
			choiceSDDate.select(DateManager.toString(DateManager.getOriginal(), 0));
			
			lblEndDate = new JLabel("Limit");
			lblEndDate.setBounds(12, 111, 80, 15);
			pnlMacroSetting.add(lblEndDate);
			
			cbRepeateNum = new JCheckBox("적용 횟수 입력");
			cbRepeateNum.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					cbDirectDate.setSelected(false);
					choiceEDYear.setEnabled(false);
					choiceEDMonth.setEnabled(false);
					choiceEDDate.setEnabled(false);
					
					choiceRepeateNum.setEnabled(true);
				}
			});
			cbRepeateNum.setBounds(12, 132, 115, 23);
			pnlMacroSetting.add(cbRepeateNum);
			
			choiceRepeateNum = new Choice();
			for(int repeatenum=1; repeatenum<=50; repeatenum++)
				choiceRepeateNum.add(repeatenum+"");
			choiceRepeateNum.setBounds(32, 161, 40, 21);
			pnlMacroSetting.add(choiceRepeateNum);
			
			cbDirectDate = new JCheckBox("End Date 입력");
			cbDirectDate.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					cbRepeateNum.setSelected(false);
					choiceRepeateNum.setEnabled(false);
					
					if(tglbtnWeekMacro.isSelected()){
						choiceEDYear.setEnabled(true);
						choiceEDMonth.setEnabled(true);
						choiceEDDate.setEnabled(true);
					}
					else if(tglbtnMonthMacro.isSelected()){
						choiceEDYear.setEnabled(true);
						choiceEDMonth.setEnabled(true);
						choiceEDDate.setEnabled(false);
					}
					else{//tglbtnYearMacro.isSelected()
						choiceEDYear.setEnabled(true);
						choiceEDMonth.setEnabled(false);
						choiceEDDate.setEnabled(false);
					}
				}
			});
			cbDirectDate.setBounds(146, 132, 115, 23);
			pnlMacroSetting.add(cbDirectDate);
			
			choiceEDYear = new Choice();
			for(int year=1990; year<=2089; year++)
				choiceEDYear.add(year+"");
			choiceEDYear.setBounds(168, 161, 55, 21);
			pnlMacroSetting.add(choiceEDYear);
			
			choiceEDMonth = new Choice();
			for(int month=1; month<=12; month++)
				choiceEDMonth.add(month+"");
			choiceEDMonth.setBounds(229, 161, 40, 21);
			pnlMacroSetting.add(choiceEDMonth);
			
			choiceEDDate = new Choice();
			for(int date=1; date<=31; date++)
				choiceEDDate.add(date+"");
			choiceEDDate.setBounds(275, 161, 40, 21);
			pnlMacroSetting.add(choiceEDDate);
			
			btnAddText = new JButton("텍스트 추가하기");
			btnAddText.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					DateManager.saveTemporaryDate();
					
					if((tglbtnWeekMacro.isSelected()|tglbtnMonthMacro.isSelected()|tglbtnYearMacro.isSelected())&&(cbRepeateNum.isSelected()|cbDirectDate.isSelected())){
						if(cbRepeateNum.isSelected()){
							saveSDEDRN();
							
							pnlMacroSetting.setVisible(false);
							pnlMacroText.setVisible(true);
						}
						else if(cbDirectDate.isSelected()){
							if(tglbtnWeekMacro.isSelected()){
								saveSDEDRN();
								
								pnlMacroSetting.setVisible(false);
								pnlMacroText.setVisible(true);
							}
							else if(tglbtnMonthMacro.isSelected()){
								saveSDEDRN();
								
								enddate[2]=startdate[2];
								
								repeatenum=DateManager.getDifferenceDate(startdate, enddate)/30+1;
								
								pnlMacroSetting.setVisible(false);
								pnlMacroText.setVisible(true);
							}
							else if(tglbtnYearMacro.isSelected()){
								saveSDEDRN();
								
								enddate[1]=startdate[1];
								enddate[2]=startdate[2];
								
								repeatenum=DateManager.getDifferenceDate(startdate, enddate)/30/12+1;
								
								pnlMacroSetting.setVisible(false);
								pnlMacroText.setVisible(true);
							}
						}
					}
				}
			});
			btnAddText.setBounds(12, 210, 147, 36);
			pnlMacroSetting.add(btnAddText);
			
			btnAddImage = new JButton("이미지 추가하기");
			btnAddImage.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					DateManager.saveTemporaryDate();
					
					if((tglbtnWeekMacro.isSelected()|tglbtnMonthMacro.isSelected()|tglbtnYearMacro.isSelected())&&(cbRepeateNum.isSelected()|cbDirectDate.isSelected())){
						if(cbRepeateNum.isSelected()){
							saveSDEDRN();
							
							pnlMacroSetting.setVisible(false);int i=1;
							DateManager.warpDate(startdate[0], startdate[1], startdate[2]);
							Main.openframeImageContainer(DateManager.toString(DateManager.getOriginal(),5));
							while(i<repeatenum){
								if(repeatGap==0)
									DateManager.addWeek(1);
								else if(repeatGap==1)
									DateManager.addMonth(1);
								else if(repeatGap==3)
									DateManager.addYear(1);
								DataManager.fixDecodedImage("add", DateManager.toString(DateManager.getOriginal(),5), DataManager.lastSavedImage, DataManager.lastSavedURL);
								i++;
							}pnlMacroText.setVisible(true);
						}
						else if(cbDirectDate.isSelected()){
							if(tglbtnWeekMacro.isSelected()){
								saveSDEDRN();
								
								pnlMacroSetting.setVisible(false);
								int i=1;
								DateManager.warpDate(startdate[0], startdate[1], startdate[2]);
								Main.openframeImageContainer(DateManager.toString(DateManager.getOriginal(),5));
								while(i<repeatenum){
									DateManager.addWeek(1);
									DataManager.fixDecodedImage("add", DateManager.toString(DateManager.getOriginal(),5), DataManager.lastSavedImage, DataManager.lastSavedURL);
									i++;
								}
							}
							else if(tglbtnMonthMacro.isSelected()){
								saveSDEDRN();
								
								enddate[2]=startdate[2];
								
								repeatenum=DateManager.getDifferenceDate(startdate, enddate)/30+1;
								
								pnlMacroSetting.setVisible(false);
								int i=1;
								DateManager.warpDate(startdate[0], startdate[1], startdate[2]);
								Main.openframeImageContainer(DateManager.toString(DateManager.getOriginal(),5));
								while(i<repeatenum){
									DateManager.addMonth(1);
									DataManager.fixDecodedImage("add", DateManager.toString(DateManager.getOriginal(),5), DataManager.lastSavedImage, DataManager.lastSavedURL);
									i++;
								}
							}
							else if(tglbtnYearMacro.isSelected()){
								saveSDEDRN();
								
								enddate[1]=startdate[1];
								enddate[2]=startdate[2];
								
								repeatenum=DateManager.getDifferenceDate(startdate, enddate)/30/12+1;
								
								pnlMacroSetting.setVisible(false);
								int i=1;
								DateManager.warpDate(startdate[0], startdate[1], startdate[2]);
								Main.openframeImageContainer(DateManager.toString(DateManager.getOriginal(),5));
								while(i<repeatenum){
									DateManager.addYear(1);
									DataManager.fixDecodedImage("add", DateManager.toString(DateManager.getOriginal(),5), DataManager.lastSavedImage, DataManager.lastSavedURL);
									i++;
								}
							}
						}
					}
				}
			});
			btnAddImage.setBounds(168, 210, 147, 36);
			pnlMacroSetting.add(btnAddImage);
			
			choiceRepeateNum.setEnabled(false);
			choiceEDYear.setEnabled(false);
			choiceEDMonth.setEnabled(false);
			choiceEDDate.setEnabled(false);
		
		
		
		
		
		
		pnlMacroText = new JPanel();
		pnlMacroText.setBounds(0, 0, 332, 264);
		frameMacro.getContentPane().add(pnlMacroText);
		pnlMacroText.setLayout(null);
		pnlMacroText.setVisible(false);
		
			textArea = new JEditorPane("text/html", null);
			textArea.setBounds(12, 10, 308, 182);
			pnlMacroText.add(textArea);
			final Document doc = textArea.getDocument();
			final EditorKit kit=textArea.getEditorKit();
			
			tfLinkingText = new JTextField("  text입력");
			tfLinkingText.addMouseListener(new MouseAdapter() {
				@Override
				public void mouseClicked(MouseEvent arg0) {
					tfLinkingText.setText("");
					tfLinkingText.setEditable(true);
				}
			});
			tfLinkingText.setEditable(false);
			tfLinkingText.setBounds(12, 202, 65, 21);
			pnlMacroText.add(tfLinkingText);
			tfLinkingText.setColumns(10);
			
			tfLink = new JTextField("  link입력");
			tfLink.addMouseListener(new MouseAdapter() {
				@Override
				public void mouseClicked(MouseEvent arg0) {
					tfLink.setText("");
					tfLink.setEditable(true);
				}
			});
			tfLink.setEditable(false);
			tfLink.setBounds(84, 202, 65, 21);
			pnlMacroText.add(tfLink);
			tfLink.setColumns(10);
			
			btnAddLinkedText = new JButton("Add Link");
			btnAddLinkedText.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					String href=new String(" <a href='"+tfLink.getText()+"'>"+tfLinkingText.getText()+"</a> ");
					try {
						((HTMLEditorKit)kit).insertHTML((HTMLDocument)doc, doc.getEndPosition().getOffset()-1, href, 1, 0, null);
					} catch (IOException | BadLocationException e) {
						// TODO 자동 생성된 catch 블록
						e.printStackTrace();
					}
				}
			});
			btnAddLinkedText.setBounds(12, 233, 137, 21);
			pnlMacroText.add(btnAddLinkedText);
			
			btnAddTextMacro = new JButton("OK");
			btnAddTextMacro.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent arg0) {
					String text=textArea.getText();
					if((text.indexOf("<body>")+9) == (text.indexOf("</body>")))
						return;
					else{//내용이 있을경우
						int i=0;
						DateManager.warpDate(startdate[0], startdate[1], startdate[2]);
						while(i<repeatenum){
							DataManager.fixDecodedText(text);
							if(repeatGap==0)
								DateManager.addWeek(1);
							else if(repeatGap==1)
								DateManager.addMonth(1);
							else if(repeatGap==3)
								DateManager.addYear(1);
							i++;
							System.out.print(i+"");
						}
						DataManager.saveIndex('t');
						DataManager.decodeIndex('t');
						DateManager.loadTemporaryDate();
						
						frameMacro.dispose();
						Main.weekContentsChanger();
					}
				}
			});
			btnAddTextMacro.setBounds(211, 202, 109, 52);
			pnlMacroText.add(btnAddTextMacro);
	}
	private void saveSDEDRN(){
		startdate[0]=Integer.parseInt(choiceSDYear.getSelectedItem());
		startdate[1]=Integer.parseInt(choiceSDMonth.getSelectedItem());
		startdate[2]=Integer.parseInt(choiceSDDate.getSelectedItem());
		enddate[0]=Integer.parseInt(choiceEDYear.getSelectedItem());
		enddate[1]=Integer.parseInt(choiceEDMonth.getSelectedItem());
		enddate[2]=Integer.parseInt(choiceEDDate.getSelectedItem());

		repeatenum=Integer.parseInt(choiceRepeateNum.getSelectedItem());
	}
}
